/*
 * # Semantic - Form
 * http://github.com/semantic-org/semantic-ui/
 *
 *
 * Copyright 2014 Contributor
 * Released under the MIT license
 * http://opensource.org/licenses/MIT
 *
 */

/*** Theme ****/

$type    : 'collection';
$element : 'form';
$import '../../theme.config';

/*** Elements ****/

/*- Form -*/

.ui.form {
  position: relative;
  max-width: 100%;
}

/*- Content -*/

.ui.form > p { margin: $paragraphMargin; }

/*- Field -*/

.ui.form .field {
  clear: both;
  margin: $fieldMargin;
}
.ui.form .fields:last-child .field,
.ui.form :not(.fields) .field:last-child { margin-bottom: 0em; }

/*- Labels -*/

.ui.form {
  .field > label {
    display: block;
    margin: $labelMargin;
    color: $labelColor;
    font-size: $labelFontSize;
    font-weight: $labelFontWeight;
    text-transform: $labelTextTransform;
  }
  .grouped.fields > label {
    margin: $groupedLabelMargin;
    color: $groupedLabelColor;
    font-size: $groupedLabelFontSize;
    font-weight: $groupedLabelFontWeight;
    text-transform: $groupedLabelTextTransform;
  }
  .inline.fields > label {
    display: inline-block;
    vertical-align: middle;
    margin: $inlineLabelMargin;
    color: $inlineLabelColor;
    font-size: $inlineLabelFontSize;
    font-weight: $inlineLabelFontWeight;
    text-transform: $inlineLabelTextTransform;
  }
}

/*- Standard Inputs -*/

.ui.form {
  textarea,
  input[type="text"],
  input[type="email"],
  input[type="date"],
  input[type="password"],
  input[type="number"],
  input[type="url"],
  input[type="tel"],
  .ui.input {
    width: 100%;
    vertical-align: top;
  }
  input[type="text"],
  input[type="email"],
  input[type="date"],
  input[type="password"],
  input[type="number"],
  input[type="url"],
  input[type="tel"] {
    margin: 0em;
    outline: none;
    -webkit-appearance: none;
    -webkit-tap-highlight-color:  rgba(255, 255, 255, 0);
    line-height: $inputLineHeight;
    padding: $inputPadding;
    font-size: $inputFontSize;
    background: $inputBackground;
    border: $inputBorder;
    color: $inputColor;
    border-radius: $inputBorderRadius;
    box-shadow: $inputBoxShadow;
    box-sizing: border-box;
    transition: $inputTransition;
  }
}

.ui.textarea, .ui.form textarea {
  margin: 0em;
  -webkit-appearance: none;
  -webkit-tap-highlight-color:  rgba(255, 255, 255, 0);
  box-sizing: border-box;
  padding: $textAreaPadding;
  font-size: $textAreaFontSize;
  background: $textAreaBackground;
  border: $textAreaBorder;
  outline: none;
  color: $inputColor;
  border-radius: $inputBorderRadius;
  box-shadow: $inputBoxShadow;
  transition: $textAreaTransition;
  font-size: $textAreaFontSize;
  height: $textAreaHeight;
  min-height: $textAreaMinHeight;
  max-height: $textAreaMaxHeight;
  line-height: $textAreaLineHeight;
  resize: $textAreaResize;
}

.ui.form {
  textarea, input[type="checkbox"] { vertical-align: $checkboxVerticalAlign; }
}

/*- Input w/ attached Button -*/

.ui.form input.attached { width: auto; }

/*- Basic Select -*/

.ui.form select {
  display: block;
  height: auto;
  width: 100%;
  background: $selectBackground;
  border: $selectBorder;
  border-radius: $selectBorderRadius;
  box-shadow: $selectBoxShadow;
  padding: $selectPadding;
  color: $selectColor;
  transition: $selectTransition;
}

/*- Dropdown -*/

.ui.form {
  .field > .selection.dropdown { width: 100%; }
  .field > .selection.dropdown > .dropdown.icon { float: right; }
  .inline.field > .selection.dropdown { width: auto; }
  .inline.field > .selection.dropdown > .dropdown.icon { float: none; }
}

/*- Dividers -*/

.ui.form .divider {
  clear: both;
  margin: $dividerMargin;
}

/*- Types of Messages -*/

.ui.form {
  .info, .success, .warning,  .error {
    &.message { display: none; }
  }
}

/* Assumptions */
.ui.form .message:first-child { margin-top: 0px; }

/*- Validation Prompt -*/

.ui.form {
  .field .prompt.label { white-space: nowrap; }
  .inline.field .prompt {
    margin: $validationMargin;
    &:before { 
      margin-top: $validationArrowOffset;
      bottom: auto;
      right: auto;
      top: 50%;
      left: 0em;
    }
  }
}

/*** States ***/

/*- Placeholder -*/

/* browsers require these rules separate */
.ui.form {
  ::-webkit-input-placeholder { color: $inputPlaceholderColor; }
  ::-moz-placeholder { color: $inputPlaceholderColor; }
  :focus::-webkit-input-placeholder { color: $inputPlaceholderFocusColor; }
  :focus::-moz-placeholder { color: $inputPlaceholderFocusColor; }
}
/* Error Placeholder */
.ui.form .error {
  ::-webkit-input-placeholder { color: $inputErrorPlaceholderColor; }
  ::-moz-placeholder { color: $inputErrorPlaceholderColor; }
  :focus::-webkit-input-placeholder { color: $inputErrorPlaceholderFocusColor; }
  :focus::-moz-placeholder { color: $inputErrorPlaceholderFocusColor; }
}

/*- Focus -*/

.ui.form {
  input{
    &[type="text"]:focus,
    &[type="email"]:focus,
    &[type="date"]:focus,
    &[type="password"]:focus,
    &[type="number"]:focus,
    &[type="url"]:focus,
    &[type="tel"]:focus {
      color: $inputFocusColor;
      border-color: $inputFocusBorderColor;
      border-radius: $inputFocusBorderRadius;
      background: $inputFocusBackground;
      box-shadow: $inputFocusBoxShadow;
    }
  }
  textarea:focus {
    color: $textAreaFocusColor;
    border-color: $textAreaFocusBorderColor;
    border-radius: $textAreaFocusBorderRadius;
    background: $textAreaFocusBackground;
    box-shadow: $textAreaFocusBoxShadow;
    -webkit-appearance: none;
  }
}

/*- Success -*/

/* On Form */
.ui.form.success .success.message { display: block; }

/*- Error -*/

/* On Form */
.ui.form.warning .warning.message { display: block; }

/*- Warning -*/

/* On Form */
.ui.form.error .error.message { display: block; }

/* On Field(s) */
.ui.form {
  .fields.error .field, .field.error {
    label, .input { color: $formErrorColor; }
    .corner.label {
      border-color: $formErrorColor;
      color: $white;
    }
    textarea,
    input[type="text"],
    input[type="email"],
    input[type="date"],
    input[type="password"],
    input[type="number"],
    input[type="url"],
    input[type="tel"] {
      background: $formErrorBackground;
      border-color: $formErrorBorder;
      color: $formErrorColor;
      border-radius: $inputErrorBorderRadius;
      box-shadow: $inputErrorBoxShadow;
    }
  }
  .field.error {
    textarea:focus,
    input[type="text"]:focus,
    input[type="email"]:focus,
    input[type="date"]:focus,
    input[type="password"]:focus,
    input[type="number"]:focus,
    input[type="url"]:focus,
    input[type="tel"]:focus{
      background: $inputErrorFocusBackground;
      border-color: $inputErrorFocusBorder;
      color: $inputErrorFocusColor;
      -webkit-appearance: none;
      box-shadow: $inputErrorFocusBoxShadow;
    }
  }
}

/*- Dropdown Error -*/

.ui.form {
  .fields.error .field .ui.dropdown,
  .fields.error .field .ui.dropdown .item,
  .field.error .ui.dropdown,
  .field.error .ui.dropdown .text,
  .field.error .ui.dropdown .item {
    background: $formErrorBackground;
    color: $formErrorColor;
  }
  .fields.error .field .ui.dropdown,
  .field.error .ui.dropdown { border-color: $formErrorBorder !important; }
  .fields.error .field .ui.dropdown:hover,
  .field.error .ui.dropdown:hover { border-color: $formErrorBorder !important; }
  .fields.error .field .ui.dropdown:hover .menu,
  .field.error .ui.dropdown:hover .menu { border-color: $formErrorBorder; }
}

/* Hover */
.ui.form {
  .fields.error .field .ui.dropdown .menu .item:hover,
  .field.error .ui.dropdown .menu .item:hover { background-color: $dropdownErrorHoverBackground; }
}

/* Active */
.ui.form {
  .fields.error .field .ui.dropdown .menu .active.item,
  .field.error .ui.dropdown .menu .active.item { background-color: $dropdownErrorActiveBackground !important; }
}

/*- Checkbox Error -*/

.ui.form {
  .fields.error .field .checkbox:not(.toggle):not(.slider) label,
  .field.error .checkbox:not(.toggle):not(.slider) label,
  .fields.error .field .checkbox:not(.toggle):not(.slider) .box,
  .field.error .checkbox:not(.toggle):not(.slider) .box {
    color: $formErrorColor;
    &:before { 
      background: $formErrorBackground;
      border-color: $formErrorBorder;
    }
  }
  .fields.error .field .checkbox label:after,
  .field.error .checkbox label:after,
  .fields.error .field .checkbox .box:after,
  .field.error .checkbox .box:after { color: $formErrorColor; }
}

/*- Disabled -*/

.ui.form {
  .field :disabled, .field.disabled { opacity: 0.5; }
  .field.disabled {
    label { opacity: 0.5; }
    :disabled { opacity: 1; }
  }
}

/*- Loading -*/

.ui.loading.form {
  position: relative;
  cursor: default;
  point-events: none;
  text-shadow: none !important;
  color: transparent !important;
  transition: all 0s linear;
  z-index: 100;
  &:before {
    position: absolute;
    content: '';
    top: 0%;
    left: 0%;
    background: $loaderDimmerColor;
    width: 100%;
    height: 100%;
    z-index: $loaderDimmerZIndex;
  }
  &:after {
    position: absolute;
    content: '';
    top: 50%;
    left: 50%;
    margin: $loaderMargin;
    width: $loaderSize;
    height: $loaderSize;
    animation: form-adjust-hue $loaderSpeed linear;
    animation-iteration-count: infinite;
    border-radius: $circularRadius;
    border-color: $loaderLineColor $loaderFillColor $loaderFillColor $loaderFillColor;
    border-style: solid;
    border-width: $loaderLineWidth;
    box-shadow: 0px 0px 0px 1px transparent;
    visibility: visible;
    z-index: $loaderLineZIndex;
  }
}

@keyframes form-adjust-hue {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

/*** Element Types ***/

/*- Required Field -*/

.ui.form {
  .required.fields > .field, .required.field {
    > label:after, > .checkbox:after {
      margin: -0.2em 0em 0em 0.2em;
      vertical-align: top;
      content: '*';
      color: $requiredColor;
    }
  }
}

/*** Variations ***/

/*- Inverted Colors -*/

.ui.inverted.form label,
.ui.form .inverted.segment label,
.ui.form .inverted.segment .ui.checkbox label,
.ui.form .inverted.segment .ui.checkbox .box,
.ui.inverted.form .ui.checkbox label,
.ui.inverted.form .ui.checkbox .box { color: $invertedLabelColor; }

/*- Field Groups -*/

/* Grouped Vertically */
.ui.form .grouped.fields {
  margin: $groupedMargin;
  &:last-child { margin-bottom: 0em; }
  > label { font-size: $groupedLabelFontSize; }
  .field {
    display: block;
    float: none;
    margin: $groupedFieldMargin;
    padding: 0em;
  }
}

/*- Fields -*/

/* Split fields */
.ui.form .fields {
  clear: both;
  &:after {
    content: ' ';
    display: block;
    clear: both;
    visibility: hidden;
    line-height: 0;
    height: 0;
  }
  > .field {
    clear: none;
    float: left;
    box-sizing: border-box;
    padding-left: ($gutterWidth / 2);
    padding-right: ($gutterWidth / 2);
    &:first-child {
      border-left: none;
      box-shadow: none;
    }
  }
}

/* Other Combinations */
.ui.form {
  @each $number in two, three, four, five, six, seven, eight, nine, ten {
    .#{$number}.fields { 
      > .fields, > .field { width: str-insert($number, "$", 1) + "Column"; }
    }
  }
}

/* Swap to full width on mobile */
@media only screen and (max-width : 767px) {
  .ui.form {
    .two, .three, .four, .five {
      &.fields > .fields, &.fields > .field {
        width: $oneColumn;
        padding-left: 0%;
        padding-right: 0%;
      }
    }    
  }
}

.ui.form .fields .field {
  &:first-child { padding-left: 0%; }
  &:last-child { padding-right: 0%; }
}

/* Sizing Combinations */

.ui.form {
  .fields .wide.field {
    width: $oneWide;
    padding-left: ($gutterWidth / 2);
    padding-right: ($gutterWidth / 2);
    &:first-child { padding-left: 0%; }
    &:last-child { padding-right: 0%; }
  }
  @each $number in one, two, three, four, five, six, seven, eight, nine, ten, eleven, twelve, thirteen, fourteen, fifteen, sixteen {
    .#{$number}.wide.field {width: str-insert($number, "$", 1) + "Wide !important"; }
  }
}

/* Swap to full width on mobile */
@media only screen and (max-width : 767px) {
  .ui.form {
    .two.fields > .fields,
    .two.fields > .field,
    .three.fields > .fields,
    .three.fields > .field,
    .four.fields > .fields,
    .four.fields > .field,
    .five.fields > .fields,
    .five.fields > .field,
    .fields > .two.wide.field,
    .fields > .three.wide.field,
    .fields > .four.wide.field,
    .fields > .five.wide.field,
    .fields > .six.wide.field,
    .fields > .seven.wide.field,
    .fields > .eight.wide.field,
    .fields > .nine.wide.field,
    .fields > .ten.wide.field,
    .fields > .eleven.wide.field,
    .fields > .twelve.wide.field,
    .fields > .thirteen.wide.field,
    .fields > .fourteen.wide.field,
    .fields > .fifteen.wide.field,
    .fields > .sixteen.wide.field {
      width: $oneColumn;
      padding-left: 0%;
      padding-right: 0%;
    }
  }
}

/*- Inline Fields -*/

.ui.form .inline.fields {
  margin: $fieldMargin;
  .field {
    display: inline-block;
    float: none;
    margin: $inlineFieldsMargin;
    padding: 0em;
  }
}

.ui.form .inline.fields .field,
.ui.form .inline.field {
  > label, > p, > input {
    display: inline-block;
    width: auto;
    margin-top: 0em;
    margin-bottom: 0em;
    vertical-align: $inlineLabelVerticalAlign;
    font-size: $inlineLabelFontSize;
  }
}

.ui.form .inline {
  &.fields .field > input,
  &.field > input { font-size: $inlineLabelFontSize; }
  &.fields .field > .ui.checkbox label { padding-left: $inlineCheckboxLabelDistance; }
}

/* Label */
.ui.form .inline {
  &.fields .field > :first-child,
  &.field > :first-child { margin: 0em $labelDistance 0em 0em; }
  &.fields .field > :only-child,
  &.field > :only-child { margin: 0em; }
}

/*- Sizes -*/

/* Standard */
.ui.small.form { font-size: $small; }

/* Medium */
.ui.form { font-size: $medium; }

/* Large */ 
.ui.large.form { font-size: $large; }

/* Huge */
.ui.huge.form { font-size: $huge; }

@extend .loadUIOverrides;
